
import sys
import pytest
import pandas as pd
from arctern_spark import GeoSeries
import arctern

if sys.version_info[0] < 3:
    from StringIO import StringIO
else:
    from io import StringIO


nyc_schema = {
    "VendorID": "string",
    "tpep_pickup_datetime": "string",
    "tpep_dropoff_datetime": "string",
    "passenger_count": "int64",
    "trip_distance": "double",
    "pickup_longitude": "double",
    "pickup_latitude": "double",
    "dropoff_longitude": "double",
    "dropoff_latitude": "double",
    "fare_amount": "double",
    "tip_amount": "double",
    "total_amount": "double",
    "buildingid_pickup": "int64",
    "buildingid_dropoff": "int64",
    "buildingtext_pickup": "string",
    "buildingtext_dropoff": "string",
}

TESTDATA = StringIO("""
VendorID,tpep_pickup_datetime,tpep_dropoff_datetime,passenger_count,trip_distance,pickup_longitude,pickup_latitude,dropoff_longitude,dropoff_latitude,fare_amount,tip_amount,total_amount,buildingid_pickup,buildingid_dropoff,buildingtext_pickup,buildingtext_dropoff
CMT,2009-04-02 08:25:25 +00:00,2009-04-02 08:33:29 +00:00,2,1.0,-73.989248,40.751546,-73.981958,40.758317,6.1,0.0,6.1,403688,365034,"POLYGON ((-73.9894369759814 40.7517691584002,-73.9892161470913 40.7516771026481,-73.9892516056526 40.7516279104321,-73.989159255401 40.7515894123602,-73.9892948428215 40.751401308483,-73.9898314148512 40.7516249851036,-73.9899221054889 40.7516627900022,-73.9897510598383 40.7519000869897,-73.9897460926954 40.7518980162849,-73.9894369759814 40.7517691584002))","POLYGON ((-73.9822052908304 40.7588972120254,-73.9822071211869 40.7588947035016,-73.9822567634792 40.7588266834214,-73.9821224241925 40.7587699956835,-73.9818128940841 40.758639381233,-73.9820162460964 40.758360744719,-73.9818382732697 40.7582856435055,-73.981819409121 40.7582776827681,-73.981899400788 40.7581680769012,-73.9820251917198 40.7582211579493,-73.9822855828536 40.7583310373706,-73.9823738081397 40.7583682660693,-73.9823753913099 40.7583689344862,-73.98232066007 40.7584439282515,-73.9828398129978 40.7586629960315,-73.982820729027 40.7586891456491,-73.9829388887601 40.758739005252,-73.9830080346481 40.7586442571473,-73.9830174698051 40.7586482387701,-73.9832739116023 40.7587564485334,-73.9831103296997 40.7589805990397,-73.9829993050139 40.7589337510552,-73.9829563840912 40.7589925629862,-73.9828327458205 40.7591619782081,-73.9822105696801 40.7588994397891,-73.9822052908304 40.7588972120254))"
VTS,2009-04-06 21:48:00 +00:00,2009-04-06 22:01:00 +00:00,5,2.52,-73.989683,40.756475,-73.983342,40.759823,8.1,0.0,8.6,1105845,401087,"POLYGON ((-73.9893525576457 40.7568222260086,-73.9894917654589 40.7566292029163,-73.9892608682108 40.7565329131227,-73.9891222219523 40.7564750930878,-73.9892128931672 40.7563493712854,-73.9892156974302 40.7563491527252,-73.9892119697645 40.7563475981042,-73.9892830019627 40.7562491065801,-73.9898485073019 40.7564849361646,-73.9898300925724 40.7565089005838,-73.9899736673459 40.75657270045,-73.9899030786359 40.7566717696579,-73.989888256619 40.7566657863024,-73.9898567351898 40.7567109465636,-73.9898829597604 40.7567192290141,-73.9897831868962 40.7569018993719,-73.9897922456992 40.7569054094433,-73.9897310188878 40.7569967746489,-73.9896425816194 40.7570057537719,-73.9894222099351 40.7569138552153,-73.9894569083189 40.7568657426089,-73.9893525576457 40.7568222260086))","POLYGON ((-73.9833126124213 40.759889463841,-73.9832519103855 40.759853949933,-73.9831908673927 40.7598182351305,-73.983053980329 40.7597381476004,-73.9832079800888 40.7595275474981,-73.9835565218121 40.759674905941,-73.9835671898498 40.7596794162903,-73.9835588047068 40.759690883922,-73.9833833380001 40.7599308432496,-73.9833126124213 40.759889463841))"
CMT,2009-04-01 19:45:50 +00:00,2009-04-01 19:51:57 +00:00,1,0.7,-73.973627,40.75509,-73.983802,40.759312,5.9,0.0,5.9,580559,625861,"POLYGON ((-73.9734920256779 40.7551741884852,-73.9737978644872 40.754750140243,-73.9738146949795 40.7547571599075,-73.9739482249048 40.7548128504217,-73.9741281998085 40.7548879111863,-73.9742627188999 40.7549440130878,-73.9743455694835 40.7549785668503,-73.9745588584799 40.7550675201469,-73.9747026703949 40.7551274975591,-73.9749775925969 40.7552461496554,-73.9746399143155 40.7557143493682,-73.9745550486506 40.7556789561055,-73.9744829574254 40.755648890298,-73.9742990183569 40.7555721776855,-73.9740808677296 40.7554811966838,-73.9738863066727 40.7554000532351,-73.9736864287259 40.7553166920987,-73.9735294263498 40.7552512119036,-73.9734579683068 40.7552214094462,-73.9734920256779 40.7551741884852))","POLYGON ((-73.9836304971894 40.7595130111286,-73.9838050972153 40.7592737617866,-73.9838686504783 40.7593005778299,-73.9837025067972 40.7595282380674,-73.983694049426 40.7595398272672,-73.9836304971894 40.7595130111286))"
VTS,2009-04-19 20:28:00 +00:00,2009-04-19 20:45:00 +00:00,1,3.04,-73.973795,40.755548,-73.982602,40.722942,12.5,0.0,13.0,14759,797836,"POLYGON ((-73.9733249245163 40.7553819910423,-73.9733436629002 40.7553563733024,-73.9733560214903 40.7553616008934,-73.9733564216822 40.7553617702809,-73.9734322663857 40.7553938502899,-73.9734726585923 40.7554109349803,-73.9735018833111 40.7554232957389,-73.9735479125907 40.7554427644364,-73.9737698198918 40.7555366253184,-73.9740031061504 40.7556352979388,-73.9739957720067 40.7556453243102,-73.9738424073254 40.7558549947496,-73.9737336181606 40.7560037235548,-73.9736421333209 40.7561287945399,-73.9736406415887 40.7561308338429,-73.9736400531328 40.7561305851687,-73.9732973180329 40.7559856185432,-73.9731377112025 40.7559181092793,-73.9731182378227 40.7559098723177,-73.9729811949506 40.7558519071515,-73.9733249245163 40.7553819910423))","POLYGON ((-73.9823296483726 40.722852513968,-73.9823297075757 40.7228524311302,-73.9823323859193 40.7228486989298,-73.9823578171445 40.7228132596801,-73.9824572967857 40.7228545812461,-73.9824573334738 40.7228545974609,-73.9826332350756 40.7229276599413,-73.9826517792731 40.7229353629926,-73.9826392010695 40.7229528895118,-73.9826236094391 40.7229746173516,-73.9825369976584 40.7229386415051,-73.9823409140356 40.7228571938427,-73.9823300756133 40.7228526914339,-73.9823296483726 40.722852513968))"
VTS,2009-04-08 20:46:00 +00:00,2009-04-08 20:52:00 +00:00,1,1.03,-73.990855,40.732875,-73.982708,40.722663,5.3,0.0,5.8,721295,60475,"POLYGON ((-73.9908331589722 40.7327788793509,-73.9910483898519 40.732816542927,-73.9910028872923 40.7330508479962,-73.9909854225247 40.7330604253352,-73.9906109444916 40.7329052342583,-73.9906260351536 40.7328914919324,-73.990628784034 40.7328824006259,-73.9905511940517 40.7328499498776,-73.9906141981045 40.7327670191296,-73.9906646603941 40.7327887642,-73.9906570624376 40.7327995912938,-73.9908087296103 40.7328596637909,-73.9908331589722 40.7327788793509))","POLYGON ((-73.9827177455862 40.7228098914323,-73.9825249261908 40.7227297998384,-73.9824241129006 40.7226879243133,-73.9824616474075 40.7226356185444,-73.982506572701 40.7225730138593,-73.9828131441605 40.7227003533403,-73.9827306835472 40.7228152649121,-73.9827177455862 40.7228098914323))"
VTS,2009-04-29 19:55:00 +00:00,2009-04-29 20:06:00 +00:00,1,1.77,-73.987965,40.756237,-73.964377,40.75861,7.7,0.0,8.7,480303,996735,"POLYGON ((-73.987887318406 40.7562804661499,-73.9880155226663 40.7561038886941,-73.9880501742063 40.7560561637181,-73.9880506229889 40.7560563528707,-73.9881873514626 40.756113754367,-73.9881980463367 40.756099024099,-73.9882319324553 40.7561132501445,-73.9882361753404 40.7561074053988,-73.9882691660556 40.7560619656695,-73.9884021945096 40.7558787434412,-73.9884813543438 40.7559119773245,-73.9882691409958 40.7562042625946,-73.9881419973498 40.7563793807204,-73.9881375412276 40.7563855181046,-73.987887318406 40.7562804661499))","POLYGON ((-73.964194454984 40.7586839742755,-73.9642078695934 40.7586654055304,-73.9642519176711 40.7586044334125,-73.9642911398003 40.7586208167565,-73.9644291723913 40.7584297471,-73.9644715462456 40.7584474478944,-73.9644939165811 40.7584567921271,-73.9644902284572 40.7584618968533,-73.9643478074131 40.7586590409306,-73.9643638600077 40.7586657465545,-73.9643414514319 40.7586967665171,-73.9643144753102 40.7587341075053,-73.964194454984 40.7586839742755))"
VTS,2009-04-01 16:41:00 +00:00,2009-04-01 16:53:00 +00:00,1,2.54,-73.994688,40.745868,-73.964587,40.75747,8.9,0.0,9.9,952115,477187,"POLYGON ((-73.9951354861931 40.7456581182552,-73.9950725203099 40.7457445750108,-73.9950413546595 40.7457873666433,-73.9949635060788 40.7458942578899,-73.9950309369444 40.7459226645947,-73.9949795813296 40.7459931783292,-73.9948657410243 40.7461494868267,-73.9945893513845 40.7460330521953,-73.9945828585992 40.7460419669042,-73.9945098701411 40.746011218356,-73.9944708978415 40.7459948002585,-73.9945223937276 40.7459240940491,-73.9945337849099 40.7459288924888,-73.9945540187444 40.745901111021,-73.9945426275654 40.7458963125831,-73.9945884499755 40.7458333972565,-73.994599839963 40.7458381956897,-73.9946371315856 40.7457869937316,-73.9946257416043 40.7457821944015,-73.9946703027283 40.7457210106565,-73.9946816927024 40.7457258090817,-73.9947202323006 40.7456728934896,-73.9947088411487 40.745668095068,-73.9947111988052 40.7456648569548,-73.9948145683766 40.7455229247155,-73.9951354861931 40.7456581182552))","POLYGON ((-73.9643661151011 40.7575185705356,-73.9644580914389 40.757391920399,-73.9645225361949 40.7574189824316,-73.9645287188916 40.75741047006,-73.9645392775541 40.7574149037957,-73.9645440108649 40.7574083864964,-73.9648195074236 40.7575240732986,-73.9648094731753 40.7575378893845,-73.9648594760621 40.7575588864163,-73.9647841011993 40.7576626763224,-73.9647633784633 40.7576912105924,-73.9646866566817 40.757658994044,-73.9646710820107 40.7576804392987,-73.9644209161835 40.7575753904327,-73.9644372375301 40.7575529170652,-73.9644085095951 40.7575408540323,-73.9643999139493 40.757537243953,-73.9644024086073 40.7575338101976,-73.9643661151011 40.7575185705356))"
VTS,2009-04-26 23:12:00 +00:00,2009-04-26 23:17:00 +00:00,1,1.15,-73.977092,40.745913,-73.966278,40.75829,4.9,0.0,5.4,284397,741543,"POLYGON ((-73.9770097119118 40.7460207072421,-73.977097665584 40.7458999794477,-73.9771207887895 40.7458682393872,-73.9771251279418 40.7458622833984,-73.9771791001409 40.7458850273923,-73.9771493882674 40.7459258117455,-73.9770810159939 40.7460196615567,-73.9770636853841 40.7460434503892,-73.9770097119118 40.7460207072421))","POLYGON ((-73.9662362934223 40.7582866576827,-73.9662705949913 40.7582381341158,-73.9664362163339 40.7583058311233,-73.9664831149338 40.7583250003192,-73.9664600956077 40.7583575639828,-73.9664488122903 40.7583735248488,-73.9662362934223 40.7582866576827))"
DDS,2009-04-16 17:10:11 +00:00,2009-04-16 17:16:32 +00:00,2,1.2,-73.971637,40.750253,-73.986869,40.741553,5.3,0.0,6.3,493993,1273168,"POLYGON ((-73.9716192655445 40.7498907636088,-73.971708417549 40.7497687750774,-73.9718204158297 40.7498161142189,-73.971958121298 40.7498743178143,-73.9718553978427 40.7500148770586,-73.9718365063571 40.7500407268692,-73.9717283927508 40.7501886607236,-73.9716588249671 40.7502838523241,-73.9716072920505 40.7503543654598,-73.9715783232568 40.7503421213398,-73.971357588242 40.75024882197,-73.9714091675485 40.750178245921,-73.9714790732467 40.7500825925938,-73.9715489704505 40.7499869509274,-73.9716192655445 40.7498907636088))","POLYGON ((-73.9865173230424 40.7412216811257,-73.9865537358468 40.7412370165161,-73.9867028263185 40.7412998045738,-73.9873188430884 40.7415592308936,-73.9869817078799 40.7420223429543,-73.9869170167502 40.7419950997895,-73.9864821844376 40.7418119755965,-73.9857598057483 40.7415077503929,-73.9856480683912 40.7414606922325,-73.9859852100277 40.7409975840392,-73.9865173230424 40.7412216811257))"
""")


def trans2wkb4series(s, index=range(0, 0)):
    if isinstance(index, range):
        index = range(0, s.size)
    import pygeos
    s_arr = []
    if not isinstance(s, pd.Series):
        return None
    try:
        for i in range(0, s.size):
            if not s[i]:
                s_arr.append(None)
            else:
                s_arr.append(pygeos.to_wkb(pygeos.Geometry(s[i])))
        s = pd.Series(s_arr, index=index)
    except:
        return None
    return s

nyc_df = pd.read_csv(TESTDATA,
                 dtype=nyc_schema,
                 date_parser=pd.to_datetime,
                 parse_dates=["tpep_pickup_datetime", "tpep_dropoff_datetime"])


geo_dropoff = nyc_df['buildingtext_dropoff'].dropna().head(10)
geo_pickup = nyc_df['buildingtext_pickup'].dropna().head(10)


geo_s = GeoSeries(geo_dropoff.to_list())
x = pd.Series(geo_dropoff.to_list())
pd_s = trans2wkb4series(x, x.index)

def test_isin():
    ret = geo_s.isin(list(pd_s[::]))
    assert all(ret)

test_isin()